package br.com.hs.nfe.xml;

import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.IOException;

import javax.xml.XMLConstants;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.Source;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamSource;
import javax.xml.validation.Schema;
import javax.xml.validation.SchemaFactory;
import javax.xml.validation.Validator;

import org.apache.commons.io.IOUtils;
import org.apache.log4j.Logger;
import org.w3c.dom.Document;
import org.xml.sax.SAXException;

public class ValidateXML {
	private static final Logger logger = Logger.getLogger("ValidateXML");
	private static final String JAXP_SCHEMA_LANGUAGE = "http://java.sun.com/xml/jaxp/properties/schemaLanguage";
	private static final String W3C_XML_SCHEMA = "http://www.w3.org/2001/XMLSchema";
	private static final String JAXP_SCHEMA_SOURCE = "http://java.sun.com/xml/jaxp/properties/schemaSource";
	private String xsd = "";
	public ValidateXML(String xsd)
	{
		this.xsd = xsd;
	}
	
	 public String validateXml(String xml) {  
		 String ret = "";
         try {  
        	 DocumentBuilderFactory documentFactory = DocumentBuilderFactory.newInstance();
     		documentFactory.setNamespaceAware(true);
     		documentFactory.setValidating(true);
     		documentFactory.setAttribute(JAXP_SCHEMA_LANGUAGE, W3C_XML_SCHEMA);
     		documentFactory.setAttribute(JAXP_SCHEMA_SOURCE, xsd);
     		DocumentBuilder parser = documentFactory.newDocumentBuilder();
     		ByteArrayInputStream bais = new ByteArrayInputStream(xml.getBytes());
     		Document document = parser.parse(bais);
     		
     		// Create a SchemaFactory capable of understanding WXS schemas.
     		SchemaFactory factory = SchemaFactory
     				.newInstance(XMLConstants.W3C_XML_SCHEMA_NS_URI);
     		
     		// Load a WXS schema, represented by a Schema instance.
     		Source schemaFile = new StreamSource(new File(xsd));
     		Schema schema = factory.newSchema(schemaFile);
     		
     		// Create a Validator object, which can be used to validate
     		// an instance document.
     		Validator validator = schema.newValidator();
     		
     		// Validate the DOM tree.
     		validator.validate(new DOMSource(document)); 
   
     		IOUtils.closeQuietly(bais);
         } catch (ParserConfigurationException e) {  
             logger.error(e);
             ret = e.getMessage();
         } catch (SAXException e) {  
             logger.error(e);
             ret = e.getMessage();
         } catch (IOException e) {  
             logger.error(e);
             ret = e.getMessage();
         }  
         return ret;
     }  
}
