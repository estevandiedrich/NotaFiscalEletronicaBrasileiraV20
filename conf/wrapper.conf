#encoding=UTF-8
# Configuration files must begin with a line specifying the encoding
#  of the the file.

#********************************************************************
# Wrapper License Properties (Ignored by Community Edition)
#********************************************************************
# Professional and Standard Editions of the Wrapper require a valid
#  License Key to start.  Licenses can be purchased or a trial license
#  requested on the following pages:
# http://wrapper.tanukisoftware.com/purchase
# http://wrapper.tanukisoftware.com/trial

# Include file problems can be debugged by removing the first '#'
#  from the following line:
##include.debug

# The Wrapper will look for either of the following optional files for a
#  valid License Key.  License Key properties can optionally be included
#  directly in this configuration file.
#include ../conf/wrapper-license.conf
#include ../conf/wrapper-license-%WRAPPER_HOST_NAME%.conf

# The following property will output information about which License Key(s)
#  are being found, and can aid in resolving any licensing problems.
#wrapper.license.debug=TRUE

#********************************************************************
# Wrapper Localization
#********************************************************************
# Specify the locale which the Wrapper should use.  By default the system
#  locale is used.
#wrapper.lang=en_US # en_US or ja_JP

# Specify the location of the Wrapper's language resources.  If these are
#  missing, the Wrapper will default to the en_US locale.
wrapper.lang.folder=../lang

#********************************************************************
# Wrapper Java Properties
#********************************************************************
# Java Application
#  Locate the java binary on the system PATH:
wrapper.java.command=java
#  Specify a specific java binary:
#set.JAVA_HOME=/java/path
#wrapper.java.command=%JAVA_HOME%/bin/java

# Tell the Wrapper to log the full generated Java command line.
#wrapper.java.command.loglevel=INFO

# Java Main class.  This class must implement the WrapperListener interface
#  or guarantee that the WrapperManager class is initialized.  Helper
#  classes are provided to do this for you.  See the Integration section
#  of the documentation for details.
wrapper.java.mainclass=org.tanukisoftware.wrapper.WrapperSimpleApp

# Java Classpath (include wrapper.jar)  Add class path elements as
#  needed starting from 1
wrapper.java.classpath.1=../lib/nfe.jar
wrapper.java.classpath.2=../lib/wrapper.jar
wrapper.java.classpath.3=../lib/log4j-1.2.12.jar
wrapper.java.classpath.4=../lib/xstream-1.3.1.jar
wrapper.java.classpath.5=../lib/xpp3_min-1.1.4c.jar
wrapper.java.classpath.6=../lib/commons-io-1.3.1.jar
wrapper.java.classpath.7=../lib/commons-beanutils-core-1.7.0.jar
wrapper.java.classpath.8=../lib/cxf-api-2.2.1.jar
wrapper.java.classpath.9=../lib/cxf-common-schemas-2.2.jar
wrapper.java.classpath.10=../lib/cxf-common-utilities-2.2.jar
wrapper.java.classpath.11=../lib/cxf-rt-bindings-http-2.2.jar
wrapper.java.classpath.12=../lib/cxf-rt-bindings-soap-2.2.jar
wrapper.java.classpath.13=../lib/cxf-rt-bindings-xml-2.2.jar
wrapper.java.classpath.14=../lib/cxf-rt-core-2.2.jar
wrapper.java.classpath.15=../lib/cxf-rt-databinding-jaxb-2.2.jar
wrapper.java.classpath.16=../lib/cxf-rt-databinding-xmlbeans-2.2.1.jar
wrapper.java.classpath.17=../lib/cxf-rt-frontend-jaxws-2.2.jar
wrapper.java.classpath.18=../lib/cxf-rt-frontend-simple-2.2.jar
wrapper.java.classpath.19=../lib/cxf-rt-transports-http-2.2.jar
wrapper.java.classpath.20=../lib/cxf-rt-transports-http-jetty-2.2.jar
wrapper.java.classpath.21=../lib/cxf-rt-ws-addr-2.2.jar
wrapper.java.classpath.22=../lib/cxf-testutils-2.2.jar
wrapper.java.classpath.23=../lib/cxf-tools-common-2.2.jar
wrapper.java.classpath.24=../lib/wsdl4j-1.6.2.jar
wrapper.java.classpath.25=../lib/xmlbeans-2.4.0.jar
wrapper.java.classpath.26=../lib/XmlSchema-1.4.4.jar
wrapper.java.classpath.27=../lib/xml-resolver-1.2.jar
wrapper.java.classpath.28=../lib/schemaorg_apache_xmlbeans.jar
wrapper.java.classpath.29=../lib/commons-digester-2.0.jar
wrapper.java.classpath.30=../lib/jasperreports-3.5.2.jar
wrapper.java.classpath.31=../lib/barbecue-1.5-beta1.jar
wrapper.java.classpath.32=../lib/fontbox-0.1.0.jar
wrapper.java.classpath.33=../lib/groovy-all-1.6.0.jar
wrapper.java.classpath.34=../lib/itext-2.1.0.jar
wrapper.java.classpath.35=../lib/xalan-2.7.0.jar
wrapper.java.classpath.36=../lib/xml-apis-2.0.2.jar
wrapper.java.classpath.37=../lib/xercesImpl-2.11.0.jar
wrapper.java.classpath.38=../lib/commons-logging-1.1.jar
wrapper.java.classpath.39=../lib/commons-collections-3.1.jar
wrapper.java.classpath.40=../lib/mail.jar
wrapper.java.classpath.41=../lib/mailapi.jar
wrapper.java.classpath.42=../lib/pop3.jar
wrapper.java.classpath.43=../lib/smtp.jar
wrapper.java.classpath.44=../lib/pdfbox-0.7.3.jar
wrapper.java.classpath.45=../lib/jta.jar
wrapper.java.classpath.46=../lib/jdbc2_0-stdext.jar
wrapper.java.classpath.47=../lib/javassist.jar
wrapper.java.classpath.48=../lib/hibernate-tools.jar
wrapper.java.classpath.49=../lib/hibernate-entitymanager.jar
wrapper.java.classpath.50=../lib/hibernate-commons-annotations.jar
wrapper.java.classpath.51=../lib/hibernate-annotations.jar
wrapper.java.classpath.52=../lib/hibernate3.jar
wrapper.java.classpath.53=../lib/ehcache-1.2.3.jar
wrapper.java.classpath.54=../lib/dom4j-1.6.1.jar
wrapper.java.classpath.55=../lib/commons-logging-1.1.jar
wrapper.java.classpath.56=../lib/commons-collections-2.1.1.jar
wrapper.java.classpath.57=../lib/cglib-2.1.3.jar
wrapper.java.classpath.58=../lib/asm-attrs.jar
wrapper.java.classpath.59=../lib/asm.jar
wrapper.java.classpath.60=../lib/antlr-2.7.6.jar
wrapper.java.classpath.61=../lib/postgresql-9.0-801.jdbc3.jar
wrapper.java.classpath.62=../lib/c3p0-0.9.1.2.jar
wrapper.java.classpath.63=../lib/commons-codec-20041127.091804.jar
wrapper.java.classpath.64=../lib/rmi_stub.jar
wrapper.java.classpath.65=../lib/DSENModel2.jar
wrapper.java.classpath.66=../lib/DSGEModel.jar
wrapper.java.classpath.67=../lib/DSGECommon.jar
wrapper.java.classpath.68=../lib/DSENCommon2.jar
wrapper.java.classpath.69=../lib/DSGEBrazilUtils.jar
wrapper.java.classpath.70=../lib/DSGECertif.jar
wrapper.java.classpath.71=../lib/DSGEProvider.jar
wrapper.java.classpath.72=../lib/commons-httpclient.jar
wrapper.java.classpath.73=../lib/DSGEWebService.jar
wrapper.java.classpath.74=../lib/DSENWebService2.jar
wrapper.java.classpath.75=../lib/DSGEUtil.jar
wrapper.java.classpath.76=../lib/jhall.jar
wrapper.java.classpath.77=../lib/jaxrpc.jar
wrapper.java.classpath.78=../lib/axis.jar
wrapper.java.classpath.79=../lib/DSENUtil2.jar
wrapper.java.classpath.80=../lib/dpec_v1.01.jar
wrapper.java.classpath.81=../lib/nfe_v2.00.jar
wrapper.java.classpath.82=../lib/commons-discovery-0.2.jar
wrapper.java.classpath.83=../lib/DSENHelp2.jar
wrapper.java.classpath.84=../lib/jhbasic-29.50.jar
wrapper.java.classpath.85=../lib/batik-ext-1.7.jar

# used to avoid problems with quotes inside the PATH environment variable
#wrapper.java.library.path.append_system_path=TRUE

# Java Library Path (location of Wrapper.DLL or libwrapper.so)
wrapper.java.library.path.1=../lib

# Java Bits.  On applicable platforms, tells the JVM to run in 32 or 64-bit mode.
wrapper.java.additional.auto_bits=TRUE

# Java Additional Parameters
wrapper.java.additional.1=-Dorg.tanukisoftware.wrapper.WrapperSimpleApp.waitForStartMain=TRUE
wrapper.java.additional.2=-Dorg.tanukisoftware.wrapper.WrapperSimpleApp.maxStartMainWait=300
wrapper.java.additional.3=-agentlib:jdwp=transport=dt_socket,address=8001,server=y,suspend=n
wrapper.java.additional.4=-Dlog4j.configuration=../conf/log4j.properties
wrapper.java.additional.5=-Xss256k
wrapper.java.additional.6=-Dnfe.hibernate.conf=../conf/hibernate.cfg.xml
wrapper.java.additional.7=-Dcom.sun.management.jmxremote
wrapper.java.additional.8=-Dorg.tanukisoftware.wrapper.WrapperManager.mbean=TRUE
wrapper.java.additional.9=-Dorg.tanukisoftware.wrapper.WrapperManager.mbean.testing=false
wrapper.java.additional.10=-Djava.security.policy=../security.policy
wrapper.java.additional.11=-Djava.io.tmpdir=../temp
#wrapper.java.additional.11=-Djava.security.debug=sunpkcs11,pkcs11 
#wrapper.java.additional.11=-Djava.security.debug=all

# Initial Java Heap Size (in MB)
wrapper.java.initmemory=256

# Maximum Java Heap Size (in MB)
wrapper.java.maxmemory=512

# Application parameters.  Add parameters as needed starting from 1
wrapper.app.parameter.1=br.com.hs.nfe.Main

#********************************************************************
# Wrapper Logging Properties
#********************************************************************
# Enables Debug output from the Wrapper.
# wrapper.debug=TRUE

# Format of output for the console.  (See docs for formats)
wrapper.console.format=PM

# Log Level for console output.  (See docs for log levels)
wrapper.console.loglevel=INFO

# Log file to use for wrapper output logging.
wrapper.logfile=../logs/wrapper.log

# Format of output for the log file.  (See docs for formats)
wrapper.logfile.format=LPTM

# Log Level for log file output.  (See docs for log levels)
wrapper.logfile.loglevel=INFO

# Maximum size that the log file will be allowed to grow to before
#  the log is rolled. Size is specified in bytes.  The default value
#  of 0, disables log rolling.  May abbreviate with the 'k' (kb) or
#  'm' (mb) suffix.  For example: 10m = 10 megabytes.
wrapper.logfile.maxsize=10m

# Maximum number of rolled log files which will be allowed before old
#  files are deleted.  The default value of 0 implies no limit.
wrapper.logfile.maxfiles=5

# Log Level for sys/event log output.  (See docs for log levels)
wrapper.syslog.loglevel=NONE

#********************************************************************
# Wrapper General Properties
#********************************************************************
# Allow for the use of non-contiguous numbered properties
wrapper.ignore_sequence_gaps=TRUE

# Title to use when running as a console
wrapper.console.title=Nota fiscal eletronica brasileira v 2.0

#********************************************************************
# Wrapper JVM Checks
#********************************************************************
# Detect DeadLocked Threads in the JVM. (Requires Standard Edition)
wrapper.check.deadlock=TRUE
wrapper.check.deadlock.interval=10
wrapper.check.deadlock.action=RESTART
wrapper.check.deadlock.output=FULL

# Out Of Memory detection.
# (Ignore output from dumping the configuration to the console.  This is only needed by the TestWrapper sample application.)
wrapper.filter.trigger.999=wrapper.filter.trigger.*java.lang.OutOfMemoryError
wrapper.filter.allow_wildcards.999=TRUE
wrapper.filter.action.999=NONE
# (Simple match)
wrapper.filter.trigger.1000=java.lang.OutOfMemoryError
# (Only match text in stack traces if -XX:+PrintClassHistogram is being used.)
#wrapper.filter.trigger.1000=Exception in thread "*" java.lang.OutOfMemoryError
#wrapper.filter.allow_wildcards.1000=TRUE
wrapper.filter.action.1000=RESTART
wrapper.filter.message.1000=The JVM has run out of memory.

#********************************************************************
# Wrapper Email Notifications. (Requires Professional Edition)
#********************************************************************
# Common Event Email settings.
#wrapper.event.default.email.debug=TRUE
#wrapper.event.default.email.smtp.host=<SMTP_Host>
#wrapper.event.default.email.smtp.port=25
#wrapper.event.default.email.subject=[%WRAPPER_HOSTNAME%:%WRAPPER_NAME%:%WRAPPER_EVENT_NAME%] Event Notification
#wrapper.event.default.email.sender=<Sender email>
#wrapper.event.default.email.recipient=<Recipient email>

# Configure the log attached to event emails.
#wrapper.event.default.email.attach_log=TRUE
#wrapper.event.default.email.maillog.lines=50
#wrapper.event.default.email.maillog.format=LPTM
#wrapper.event.default.email.maillog.loglevel=INFO

# Enable specific event emails.
#wrapper.event.wrapper_start.email=TRUE
#wrapper.event.jvm_prelaunch.email=TRUE
#wrapper.event.jvm_start.email=TRUE
#wrapper.event.jvm_started.email=TRUE
#wrapper.event.jvm_deadlock.email=TRUE
#wrapper.event.jvm_stop.email=TRUE
#wrapper.event.jvm_stopped.email=TRUE
#wrapper.event.jvm_restart.email=TRUE
#wrapper.event.jvm_failed_invocation.email=TRUE
#wrapper.event.jvm_max_failed_invocations.email=TRUE
#wrapper.event.jvm_kill.email=TRUE
#wrapper.event.jvm_killed.email=TRUE
#wrapper.event.jvm_unexpected_exit.email=TRUE
#wrapper.event.wrapper_stop.email=TRUE

# Specify custom mail content
wrapper.event.jvm_restart.email.body=The JVM was restarted.\n\nPlease check on its status.\n

#********************************************************************
# Wrapper Windows NT/2000/XP Service Properties
#********************************************************************
# WARNING - Do not modify any of these properties when an application
#  using this configuration file has been installed as a service.
#  Please uninstall the service before modifying this section.  The
#  service can then be reinstalled.

# Name of the service
wrapper.name=nfev20

# Display name of the service
wrapper.displayname=Nota fiscal eletronica brasileira v 2.0

# Description of the service
wrapper.description=Nota fiscal eletronica brasileira v 2.0

# Service dependencies.  Add dependencies as needed starting from 1
wrapper.ntservice.dependency.1=postgresql-8.4

# Mode in which the service is installed.  AUTO_START, DELAY_START or DEMAND_START
wrapper.ntservice.starttype=AUTO_START

# Allow the service to interact with the desktop.
wrapper.ntservice.interactive=false

